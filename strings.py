# -*- coding: utf-8 -*-
"""Strings.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1gTcTX-MRDaK1eIGQ9YBUrCZ61L4IVYc6
"""

#input = a2b3c4 and output = aabbbccc
def solution(s):
    output = ""
    prevChar = ''
    for i in s:
        ch = i
        if(ch.isalpha()):
            output+=ch
            prevChar = ch

        else:
            count = int(ch)
            for j in range(1,count):
                output+=prevChar
    return output

def main():
    s = input()
    print(solution(s))

main()

#input = aabbccc and output = a2b2c3
def solution(s):
    output = ""
    prevChar = s[0]
    count = 1
    for i in range(1,len(s)):
        if(s[i] == prevChar):
            count+=1
        else:
            output = output + prevChar + str(count)
            prevChar = s[i]
            count = 1
        if(i==len(s)-1):
            output = output + prevChar + str(count)

    return output
def main():
    s = input()
    print(solution(s))

main()

#find frequency of each letters in a string and add the even frequencies only and return the sum
def sumOfFrequency(s):
    sum = 0
    count = 0
    for i in range(len(s)):
        if s[i] == s[i-1]:
            count+=1
        else:
            if count%2 == 0:
                sum +=count
            count = 1
    if count%2 == 0:
        sum += count
    return sum

def main():
    s = input()
    print(sumOfFrequency(s))

main()

#Reverse the words of a string
def solution(s):
     words = s.split()
     words.reverse()
     return " ".join(words)

def main():
    s = input()
    print(solution(s))

main()

#Integer to Roman letters
ls = [1000,900,500,400,100,90,50,40,10,9,5,4,1]
dict = {1:"I", 4: "IV", 5: "V", 9:"IX", 10: "X",40:"XL", 50: "L", 90: "XC", 100:"C", 400: "CD",500:"D", 900: "CM", 1000: "M" }


def integerToRoman(n):
    res = ""
    for i in ls:
        while(n>=i):
         res+=dict[i]
         n-=i
    return res

def main():
    n = int(input())
    print(integerToRoman(n))

main()

#Roman letters to Integer
def romanToNumber(s):
    dict = { 'I': 1, 'V': 5, 'X': 10, 'L': 50, 'C': 100, 'D': 500, 'M': 1000 }

    digit = 0
    i = 0
    while i < len(s):
        if i + 1 < len(s) and dict[s[i]] < dict[s[i + 1]]:
            digit = digit + (dict[s[i + 1]] - dict[s[i]])
            i += 2
        else:
            digit += dict[s[i]]
            i += 1

    return digit


def main():
    s = input()
    print(romanToNumber(s))
main()

#In a coding language 0-9 is coded as a-j. Input is given as numbers from 0-9. Code into alphabets a-j
num = int(input())
dic = {0:'a', 1:'b', 2:'c', 3:'d', 4:'e', 5:'f', 6:'g', 7:'h', 8:'i', 9:'j'}
res = ""
while num>0:
	n = num%10
	if n in dic:
		res+=dic[n]
		num = num//10
print(res[::-1])